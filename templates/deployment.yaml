apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    heritage: {{ .Release.Service }}
    type: {{ .Chart.Name }}
    app: {{ .Release.Name }}
spec:
  replicas: {{ .Values.scale.minReplicas }}
  selector:
    matchLabels:
      type: {{ .Chart.Name }}
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        type: {{ .Chart.Name }}
        app: {{ .Release.Name }}
    spec:
      {{- if .Values.aws_iam_role_arn }}	
      serviceAccountName: {{ .Release.Name }}	
      securityContext:	
        fsGroup: 65534 # To be able to read Kubernetes and AWS token files	
      {{- end }}
      {{- if .Values.initContainer.enabled }}
      initContainers:
      - name: {{ .Values.initContainer.name }}
        image: {{ .Values.initContainer.image }}
        imagePullPolicy: {{ .Values.initContainer.image_pull_policy }}
        {{- if .Values.initContainer.command }}
        command:
          {{- .Values.initContainer.command | toYaml | nindent 12 }}
        {{- end }}
        {{- if .Values.initContainer.env }}
        env:
        {{- range $key, $val := .Values.initContainer.env }}
          - name: {{ $key }}
            value: {{ $val | quote }}
        {{- end }}
        {{- end }}
        {{- if .Values.initContainer.secretName }}
        envFrom:
          - secretRef:
              name: {{ .Values.initContainer.secretName }}
        {{- end }}
      {{- end }}
      containers:
        - name: {{ .Release.Name }}
          image: "{{ .Values.image_repo }}:{{ .Values.image_tag }}"
          imagePullPolicy: {{ .Values.image_pull_policy }}
          {{- if .Values.command }}
          command:
            {{- .Values.command | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.args }}
          args:
            {{- .Values.args | toYaml | nindent 12 }}
          {{- end }}
          env:
            - name: PORT
              value: {{ .Values.port | quote  }}
          {{- if .Values.env }}
          {{- range $key, $val := .Values.env }}
            - name: {{ $key }}
              value: {{ $val | quote }}
          {{- end }}
          {{- end }}
          {{- if .Values.secretName }}
          envFrom:
            - secretRef:
                name: {{ .Values.secretName }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.port }}
              protocol: TCP
          {{- if .Values.probe.liveness }}
          livenessProbe:
            httpGet:
              path: {{ .Values.probe.liveness | quote }}
              port: http
            initialDelaySeconds: {{ .Values.probe.livenessInitialDelaySeconds }}
            periodSeconds: {{ .Values.probe.livenessPeriodSeconds }}
            timeoutSeconds: {{ .Values.probe.livenessTimeoutSeconds }}
            failureThreshold: {{ .Values.probe.livenessFailureThreshold }}
          {{- end }}
          {{- if .Values.probe.readiness }}
          readinessProbe:
            httpGet:
              path: {{ .Values.probe.readiness | quote }}
              port: http
            initialDelaySeconds: {{ .Values.probe.readinessInitialDelaySeconds }}
            periodSeconds: {{ .Values.probe.readinessPeriodSeconds }}
            timeoutSeconds: {{ .Values.probe.readinessTimeoutSeconds }}
            failureThreshold: {{ .Values.probe.readinessFailureThreshold }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
